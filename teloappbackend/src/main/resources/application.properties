# === CONFIGURACIÓN DE BASE DE DATOS ===
# Para Railway/Render, usar las variables de entorno que proporciona la plataforma
spring.datasource.url=jdbc:postgresql://dpg-d1tni0re5dus73dpe4f0-a/teloapp_db
spring.datasource.username=teloapp_db_user
spring.datasource.password=7JQNVWOcntpqoEDwYDnlm5NcCKhYf6OE
spring.datasource.driver-class-name=org.postgresql.Driver

# === CONFIGURACIÓN JPA/HIBERNATE ===
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# === CONFIGURACIÓN DEL SERVIDOR ===
server.port=${PORT:8080}
server.error.include-stacktrace=on_param
server.error.include-message=always

# === CONFIGURACIÓN DE OAUTH2 (GOOGLE) ===
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:{baseUrl}/oauth2/callback/{registrationId}}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# === ACTUATOR PARA HEALTH CHECKS ===
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true

# === CONFIGURACIÓN DE LOGGING ===
logging.level.org.springframework.web.cors=DEBUG
logging.level.com.teloapp.teloappbackend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# === CONFIGURACIONES ADICIONALES ===
spring.output.ansi.enabled=always
spring.jpa.open-in-view=false

# === CONFIGURACIÓN PARA PRODUCCIÓN ===
# Estas se activan automáticamente en producción
spring.profiles.active=${SPRING_PROFILES_ACTIVE:development}